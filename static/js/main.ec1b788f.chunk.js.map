{"version":3,"sources":["Form/index.js","Section/index.js","Container/index.js","App.js","reportWebVitals.js","index.js"],"names":["Form","eur","amount","currency","onFormSubmit","onInputChange","onSelectChange","className","onSubmit","type","min","step","placeholder","name","value","onChange","Section","props","result","Container","children","App","useState","setCurrency","setAmount","resultValue","setResultValue","event","preventDefault","console","log","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kSA6CeA,EA3CF,SAAC,GAA2E,IAA1EC,EAAyE,EAAzEA,IAAKC,EAAoE,EAApEA,OAAQC,EAA4D,EAA5DA,SAAUC,EAAkD,EAAlDA,aAAcC,EAAoC,EAApCA,cAAeC,EAAqB,EAArBA,eAI/D,OACI,uBAAMC,UAAU,OACZC,SAAUJ,EADd,UAGI,2BAAUG,UAAU,kBAApB,UACI,wBAAQA,UAAU,oBAAlB,iCACA,mBAAGA,UAAU,kBAAb,SACI,wBAAOA,UAAU,aAAjB,UACI,sBAAMA,UAAU,wBAAhB,sCACA,uBACIE,KAAK,SACLC,IAAI,IAAIC,KAAK,IACbC,YAAY,sBACZL,UAAU,eACVM,KAAK,MACLC,MAAOZ,EACPa,SAAUV,SAItB,wBAAOE,UAAU,aAAjB,cAA+B,sBAAMA,UAAU,wBAAhB,iCAC3B,yBACIO,MAAOX,EACPY,SAAUT,EACVC,UAAU,cAHd,UAKI,wBAAQO,MAAOb,EAAf,iBACA,wBAAQa,MA9BhB,KA8BQ,iBACA,wBAAQA,MA9BhB,KA8BQ,0BAKZ,wBAAQP,UAAU,eAAlB,sBACA,wBAAQA,UAAU,eAAlB,6CC9BGS,G,MARC,SAACC,GAAD,OACZ,0BAASV,UAAU,UAAnB,UACI,sBAAMA,UAAU,uBAAhB,wBACA,wBAAQA,UAAU,kBAAlB,SAAqCU,EAAMC,cCEpCC,G,MANG,SAACF,GAAD,OACd,sBAAMV,UAAU,YAAhB,SACKU,EAAMG,aCsDAC,MAnDf,WAEE,IAWA,EAAgCC,mBAAS,IAAzC,mBAAOnB,EAAP,KAAiBoB,EAAjB,KAIA,EAA4BD,mBAAS,IAArC,mBAAOpB,EAAP,KAAesB,EAAf,KAQA,EAAsCF,mBAAS,IAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KAaA,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CACAxB,OAAQA,EACRC,SAAUA,EACVC,aAhBiB,SAACuB,GACpBA,EAAMC,iBANNF,GAAe,SAAAD,GAAW,OAAkBvB,EAAOC,KAhBnDqB,GAAU,SAAAtB,GAAM,MAAa,MAI7BqB,GAAY,SAAApB,GAAQ,OARV,QA8BV0B,QAAQC,IAAI5B,GACZ2B,QAAQC,IAAI3B,GACZ0B,QAAQC,IAAIL,IAUVpB,cAzBkB,SAAC,GAAD,IAAE0B,EAAF,EAAEA,OAAF,OAAcP,EAAUO,EAAOjB,QA0BjDR,eA9BmB,SAAC,GAAD,IAAEyB,EAAF,EAAEA,OAAF,OAAcR,EAAYQ,EAAOjB,UA+BpD,cAAC,EAAD,CAASI,OAAQO,QCxCRO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ec1b788f.chunk.js","sourcesContent":["import \"./style.css\";\r\n\r\nconst Form = ({eur, amount, currency, onFormSubmit, onInputChange, onSelectChange }) => {\r\n    const usd = 3.79;\r\n    const chf = 4.13;\r\n\r\n    return (\r\n        <form className=\"form\"\r\n            onSubmit={onFormSubmit}\r\n        >\r\n            <fieldset className=\"form__container\">\r\n                <legend className=\"form__description\">Kalkulator walutowy</legend>\r\n                <p className=\"forn__paragraph\">\r\n                    <label className=\"form__item\">\r\n                        <span className=\"form__ItemDescription\">Podaj kwotę w PLN: </span>\r\n                        <input\r\n                            type=\"number\"\r\n                            min=\"1\" step=\"1\"\r\n                            placeholder=\"Wpisz kwotę...\"\r\n                            className=\"form__input \"\r\n                            name=\"pln\"\r\n                            value={amount}\r\n                            onChange={onInputChange}\r\n                        />\r\n                    </label>\r\n                </p>\r\n                <label className=\"form__item\"> <span className=\"form__ItemDescription\">Wybierz walutę</span>\r\n                    <select\r\n                        value={currency}\r\n                        onChange={onSelectChange}\r\n                        className=\"form__input\"\r\n                        >\r\n                        <option value={eur}>EUR</option>\r\n                        <option value={usd}>USD</option>\r\n                        <option value={chf}>CHF</option>\r\n                    </select>\r\n                </label>\r\n\r\n            </fieldset>\r\n            <button className=\"form__button\">Przelicz</button>\r\n            <button className=\"form__button\">Wyczyść formularz</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Form;","import \"./style.css\";\r\n\r\nconst Section = (props) =>(\r\n    <section className=\"section\">\r\n        <span className=\"section__description\">Wynik to: </span>\r\n        <strong className=\"section__result\">{props.result}</strong>\r\n    </section>\r\n)\r\n    ;\r\n\r\nexport default Section;","import \"./style.css\";\r\nconst Container = (props) => (\r\n    <main className=\"container\">\r\n        {props.children}\r\n    </main>\r\n);\r\n\r\nexport default Container;","import { useState } from 'react';\nimport Form from './Form';\nimport Section from './Section';\nimport Container from \"./Container\";\n\n\nfunction App() {\n\n  const eur = 4.55;\n    \n\n  const clearAmount = () =>{ \n    setAmount(amount => amount = \"\")\n  }\n\n  const clearCurrency = () => {\n    setCurrency(currency => currency =  eur)\n  }\n\n  const [currency, setCurrency] = useState(\"\");\n\n  const onSelectChange = ({target}) => setCurrency(target.value);\n\n  const [amount, setAmount] = useState(\"\");\n\n  const onInputChange = ({target}) => setAmount(target.value);\n\n  const getResult = () => {\n    setResultValue(resultValue => resultValue = amount/currency )\n  };\n\n  const [resultValue, setResultValue] = useState(\"\");\n\n  const onFormSubmit = (event) => {\n    event.preventDefault();\n    getResult();\n    clearAmount();\n    clearCurrency();\n    console.log(amount);\n    console.log(currency);\n    console.log(resultValue);\n    \n  }\n\n  return (\n    <Container >\n      <Form \n      amount={amount} \n      currency={currency}  \n      onFormSubmit={onFormSubmit} \n      onInputChange={onInputChange}\n      onSelectChange={onSelectChange} />\n      <Section result={resultValue} />\n    </ Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}