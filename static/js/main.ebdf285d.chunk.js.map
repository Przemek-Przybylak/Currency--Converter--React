{"version":3,"sources":["Section/styled.js","Section/index.js","Time/styled.js","Time/index.js","Time/useCurrentTime.js","Form/styled.js","Form/index.js","Form/useCurrentData.js","Container/styled.js","Container/index.js","App.js","reportWebVitals.js","index.js"],"names":["StyledSection","styled","section","Paragraph","p","Section","result","sourceAmount","toFixed","targetAmount","currency","Div","div","Time","time","useState","Date","currentTime","setcurrentTime","useEffect","intervalId","setInterval","clearInterval","useCurrentTime","toLocaleString","weekday","day","month","year","hour","minute","second","StyledForm","form","StateDiv","Label","label","Fieldset","fieldset","Legend","legend","Span","span","Input","input","Button","button","date","css","Form","setResult","ratesData","state","setRatesData","setTimeout","a","fetch","response","ok","Error","statusText","json","rates","useCurrentData","setCurrency","amount","setAmount","onSubmit","event","preventDefault","rate","getResult","type","min","step","placeholder","className","value","onChange","target","as","Object","keys","map","onClick","StyledContainer","main","Container","props","children","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ebdf285d.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const StyledSection = styled.section`\r\n    margin: 0 auto;\r\n    width: 100%;\r\n    text-align: center;\r\n    max-width: 300px;\r\n    background-color: rgb(4, 164, 228);\r\n    color: white;\r\n    font-weight: 700;\r\n    padding: 5px;\r\n`;\r\n\r\nexport const Paragraph = styled.p`\r\n    padding: 0;\r\n    margin: 0;\r\n`;","import { StyledSection, Paragraph } from \"./styled\";\r\n\r\nexport const Section = ({ result }) => (\r\n  <StyledSection>\r\n    <Paragraph>\r\n      <span>Wynik to: </span>\r\n      <strong>\r\n        {result && (\r\n          <>\r\n            {result.sourceAmount\r\n              ? ` ${result.sourceAmount.toFixed(2)} PLN = `\r\n              : \"\"}\r\n            {result.targetAmount ? `${result.targetAmount.toFixed(2)} ` : \"\"}\r\n            {result.sourceAmount ? result.currency : \"\"}\r\n          </>\r\n        )}\r\n      </strong>\r\n    </Paragraph>\r\n  </StyledSection>\r\n);\r\n\r\n","import styled from \"styled-components\";\r\n\r\nexport const Div = styled.div`\r\n    margin: 0px;\r\n    margin-bottom: 10px;\r\n    color: rgb(172, 172, 172);\r\n    font-family: 'Roboto Mono', monospace;\r\n    font-size: 10px;\r\n`;\r\n\r\nexport const Paragraph = styled.p`\r\n    margin: 0px;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n`;","import { Div, Paragraph } from \"./styled\";\r\nimport { useCurrentTime, } from \"./useCurrentTime\";\r\n\r\nexport const Time = () => {\r\n    const time = useCurrentTime();\r\n\r\n    return (\r\n        <Div>\r\n            <Paragraph>Dzisiaj jest{\" \"}\r\n                {time.toLocaleString(\"pl\", {\r\n                    weekday: \"long\",\r\n                    day: \"numeric\",\r\n                    month: \"numeric\",\r\n                    year: \"numeric\",\r\n                    hour: \"numeric\",\r\n                    minute: \"numeric\",\r\n                    second: \"numeric\"\r\n                })}\r\n            </Paragraph>\r\n        </Div>\r\n    );\r\n};","import { useEffect, useState } from \"react\";\r\n\r\nexport const useCurrentTime = () => {\r\n    const [currentTime, setcurrentTime] = useState(new Date());\r\n\r\n    useEffect(() => {\r\n        const intervalId = setInterval(() => {\r\n            setcurrentTime(new Date());\r\n        }, 1000);\r\n\r\n        return () => {\r\n            clearInterval(intervalId);\r\n        };\r\n    }, [setcurrentTime]);\r\n\r\n    return currentTime;\r\n};\r\n","import styled, { css } from \"styled-components\";\r\n\r\nexport const StyledForm = styled.form`\r\n    margin: 20px auto;\r\n    max-width: 600px;\r\n`;\r\n\r\nexport const Div = styled.div`\r\n    padding: 10px 20px 10px 20px;\r\n    background-color: white;\r\n    border: 1px solid #ccc;\r\n    opacity: 95%;\r\n`;\r\n\r\nexport const StateDiv = styled(Div)`\r\n    height: 234px;\r\n    max-width: 600px;\r\n    text-align: center;\r\n    border: none;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n    display: flex;\r\n    justify-content: center;\r\n`;\r\n\r\nexport const Fieldset = styled.fieldset`\r\n    padding: 15px;\r\n    border: none;\r\n    width: 100%;\r\n    margin-bottom: 15px;\r\n`;\r\n\r\nexport const Legend = styled.legend`\r\n    margin: auto;\r\n    background-color: rgb(4, 164, 228);\r\n    color: white;\r\n    font-weight: 700;\r\n`;\r\n\r\nexport const Span = styled.span`\r\n    display: inline-block;\r\n    width: 100%;\r\n    max-width: 200px;\r\n    margin: 5px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n    width: 100%;\r\n    max-width: 300px;\r\n    padding: 3px;\r\n    border: 1px solid #ccc;\r\n    text-align: center;\r\n    font-weight: 700;\r\n\r\n    @media (max-width:836px) {\r\n        max-width: none;\r\n    };\r\n\r\n    &:invalid {\r\n        background-color: rgb(255, 180, 180);\r\n    };\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    margin: 5px auto;\r\n    width: 100%;\r\n    border: none;\r\n    padding: 3px;\r\n    background-color: rgb(4, 164, 228);\r\n    color: white;\r\n`;\r\n\r\nexport const Paragraph = styled.p`\r\n    margin: 90px auto;\r\n    font-size: 24px;\r\n    font-weight: bold;\r\n    letter-spacing: 1,5px;\r\n    color: rgb(4, 164, 228);\r\n\r\n    ${({ date }) => date && css`\r\n    margin: 2px auto;\r\n    font-size: 10px;\r\n    font-weight: 300;\r\n    letter-spacing: 1px;\r\n    color: rgb(172,172,172);\r\n    text-align: center;\r\n        `};\r\n`;","import { useState } from \"react\";\r\nimport { Section } from \"../Section\";\r\nimport { Time } from \"../Time\";\r\nimport { useCurrentData } from \"./useCurrentData\";\r\nimport {\r\n    StyledForm,\r\n    Div,\r\n    Label,\r\n    Fieldset,\r\n    Legend,\r\n    Span,\r\n    Input,\r\n    Button,\r\n    StateDiv,\r\n    Paragraph,\r\n} from \"./styled\";\r\n\r\nexport const Form = () => {\r\n    const [result, setResult] = useState();\r\n    const ratesData = useCurrentData();\r\n\r\n    const getResult = (currency, amount) => {\r\n        const rate = ratesData.rates[currency];\r\n\r\n        setResult({\r\n            sourceAmount: +amount,\r\n            targetAmount: amount * rate,\r\n            currency,\r\n        });\r\n    };\r\n\r\n    const [currency, setCurrency] = useState(\"EUR\");\r\n    const [amount, setAmount] = useState(\"\");\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        getResult(currency, amount);\r\n    };\r\n\r\n    const onClickClear = () => {\r\n        setAmount(\"\");\r\n        setResult(\"\");\r\n    };\r\n\r\n    return (\r\n        <StyledForm onSubmit={onFormSubmit}>\r\n            <Div>\r\n                <Time />\r\n                <Legend>Kalkulator walutowy</Legend>\r\n                {ratesData.state === \"loading\" ? (\r\n                    <StateDiv>\r\n                        <Paragraph>\r\n                            Proszę czekać, trwa pobieranie danych...\r\n                        </Paragraph>\r\n                    </StateDiv>\r\n                ) : ratesData.state === \"error\" ? (\r\n                    <StateDiv>\r\n                        <Paragraph>\r\n                            Niestety nie udało się pobrać kursów walut.<br />\r\n                            Sprawdź czy masz internet, jeśli tak to spróbuj później!\r\n                        </Paragraph>\r\n                    </StateDiv>\r\n                ) : (\r\n                    <>\r\n                        <Fieldset>\r\n                            <p>\r\n                                <Label>\r\n                                    <Span>Podaj kwotę w PLN: </Span>\r\n                                    <Input\r\n                                        type=\"number\"\r\n                                        min=\"1\" step=\"1\"\r\n                                        placeholder=\"Wpisz kwotę...\"\r\n                                        className=\"form__input \"\r\n                                        value={amount}\r\n                                        onChange={({ target }) => setAmount(target.value)}\r\n                                    />\r\n                                </Label>\r\n                            </p>\r\n                            <Label>\r\n                                <Span>Wybierz walutę</Span>\r\n                                <Input as=\"select\"\r\n                                    value={currency}\r\n                                    onChange={({ target }) => setCurrency(target.value)}\r\n                                >\r\n                                    {Object.keys(ratesData.rates).map((currency => (\r\n                                        <option\r\n                                            key={currency}\r\n                                            value={currency}\r\n                                        >\r\n                                            {currency}\r\n                                        </option>\r\n                                    )))};\r\n                                </Input>\r\n                            </Label>\r\n                        </Fieldset>\r\n                        <Paragraph\r\n                            date\r\n                        >\r\n                            Kursy walut pobierane z Europejskiego Banku Centralnego dnia: {ratesData.date}\r\n                        </Paragraph>\r\n                        <Button>Przelicz</Button>\r\n                        <Button type=\"reset\" onClick={onClickClear} >Wyczyść formularz</Button>\r\n                        <Section result={result} />\r\n                    </>)}\r\n            </Div>\r\n        </StyledForm>\r\n    );\r\n};\r\n\r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport const useCurrentData = () => {\r\n    const [ratesData, setRatesData] = useState({\r\n        state: \"loading\",\r\n    });\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await fetch(\"https://api.exchangerate.host/latest?base=PLN\");\r\n\r\n                if (!response.ok) {\r\n                    throw new Error(response.statusText);\r\n                };\r\n\r\n                const { rates, date } = await response.json();\r\n\r\n                setRatesData({\r\n                    state: \"success\",\r\n                    rates,\r\n                    date,\r\n                });\r\n            } catch {\r\n                setRatesData({\r\n                    state: \"error\",\r\n                });\r\n            };\r\n        };\r\n\r\n        setTimeout(fetchData, 1000);\r\n    }, []);\r\n\r\n    return ratesData;\r\n};","import styled from \"styled-components\";\r\n\r\nexport const StyledContainer = styled.main`\r\n    margin: 0px auto;\r\n    background-image: url(\"https://cdn.wallpapersafari.com/14/53/1xAB3U.jpg\");\r\n    background-size: cover;\r\n    height: 100vh;\r\n    overflow-y: hidden;\r\n`;","import { StyledContainer } from \"./styled\";\r\n\r\nexport const Container = (props) => (\r\n    <StyledContainer>\r\n        {props.children}\r\n    </StyledContainer>\r\n);\r\n\r\n","import { Form } from './Form';\r\nimport { Container } from \"./Container\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Container >\r\n      <Form />\r\n    </ Container>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}