{"version":3,"sources":["Form/currencies.js","Section/styled.js","Section/index.js","Time/styled.js","Time/index.js","Form/index.js","Container/styled.js","Container/index.js","App.js","reportWebVitals.js","index.js"],"names":["currencies","name","rate","StyledSection","styled","section","StyledParagraph","p","Section","result","sourceAmount","toFixed","targetAmount","currency","StyledDiv","div","Time","useState","Date","actualTime","setActualTime","useEffect","setIntervalId","setInterval","clearInterval","toLocaleString","weekday","day","month","year","hour","minute","second","Form","setResult","setCurrency","amount","setAmount","className","type","min","step","placeholder","value","onChange","target","map","onClick","event","preventDefault","find","getResult","StyledContainer","main","Container","props","children","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3edfe955.chunk.js","sourcesContent":["export const currencies = [\r\n    {name: 'EUR', rate: 4.55},\r\n    {name: 'USD', rate: 3.79},\r\n    {name: 'CHF', rate: 4.13},\r\n  ];\r\n\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledSection = styled.section`\r\n    margin: 0 auto;\r\n    width: 100%;\r\n    text-align: center;\r\n    max-width: 300px;\r\n    background-color: rgb(4, 164, 228);\r\n    color: white;\r\n    font-weight: 700;\r\n    padding: 5px;\r\n`;\r\n\r\nexport const StyledParagraph = styled.p`\r\n    padding: 0;\r\n    margin: 0;\r\n`;","import { StyledSection, StyledParagraph } from \"./styled\";\r\n\r\nexport const Section = ({ result }) => (\r\n  <StyledSection>\r\n    <StyledParagraph>\r\n      <span>Wynik to: </span>\r\n      <strong>\r\n        {result && (\r\n          <>\r\n            {result.sourceAmount\r\n              ? ` ${result.sourceAmount.toFixed(2)} PLN = `\r\n              : \"\"}\r\n            {result.targetAmount ? `${result.targetAmount.toFixed(2)} ` : \"\"}\r\n            {result.sourceAmount ? result.currency : \"\"}\r\n          </>\r\n        )}\r\n      </strong>\r\n    </StyledParagraph>\r\n  </StyledSection>\r\n);\r\n\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledDiv = styled.div`\r\n    margin: 0px;\r\n    margin-bottom: 10px;\r\n    color: rgb(172, 172, 172);\r\n    font-family: 'Roboto Mono', monospace;\r\n    font-size: 10px;\r\n`;\r\n\r\nexport const StyledParagraph = styled.p`\r\n    margin: 0px;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n`;","import { useEffect, useState } from \"react\";\r\nimport { StyledDiv, StyledParagraph } from \"./styled\";\r\n\r\nexport const Time = () => {\r\n    const [actualTime, setActualTime] = useState(new Date());\r\n\r\n    useEffect(() => {\r\n        const setIntervalId = setInterval(() => {\r\n            setActualTime(new Date());\r\n        }, 1000);\r\n\r\n        return () => {\r\n            clearInterval(setIntervalId);\r\n        };\r\n    }, [setActualTime]);\r\n\r\n    return (\r\n        <StyledDiv>\r\n            <StyledParagraph>Dzisiaj jest \r\n                {actualTime.toLocaleString(\"pl\", { \r\n                weekday: \"long\", \r\n                day: \"numeric\", \r\n                month: \"numeric\", \r\n                year: \"numeric\", \r\n                hour: \"numeric\", \r\n                minute: \"numeric\", \r\n                second: \"numeric\" \r\n                })}\r\n                </StyledParagraph>\r\n        </StyledDiv>\r\n    );\r\n};","import \"./style.css\";\r\nimport { useState } from \"react\";\r\nimport { currencies } from \"./currencies\";\r\nimport { Section } from \"../Section\";\r\nimport { Time } from \"../Time\";\r\n\r\nexport const Form = () => {\r\n    const [result, setResult] = useState(\"\");\r\n    const [currency, setCurrency] = useState(currencies[0].name);\r\n    const [amount, setAmount] = useState(\"\");\r\n\r\n    const getResult = (currency, amount) => {\r\n        if (amount <= 0)\r\n            return \"\";\r\n\r\n        const rate = currencies.find(\r\n            ({ name }) => name === currency).rate\r\n\r\n        setResult({\r\n            sourceAmount: +amount,\r\n            targetAmount: amount / rate,\r\n            currency\r\n        })\r\n    };\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        getResult(currency, amount);\r\n    };\r\n\r\n    const onClickClear = () => {\r\n        setAmount(\"\");\r\n        setResult(\"\");\r\n    };\r\n\r\n    return (\r\n        <form className=\"form\">\r\n            <div className=\"form__container\">\r\n                <Time />\r\n                <fieldset className=\"form__fieldset\">\r\n                    <legend className=\"form__description\">Kalkulator walutowy</legend>\r\n                    <p className=\"forn__paragraph\">\r\n                        <label className=\"form__item\">\r\n                            <span className=\"form__ItemDescription\">Podaj kwotę w PLN: </span>\r\n                            <input\r\n                                type=\"number\"\r\n                                min=\"1\" step=\"1\"\r\n                                placeholder=\"Wpisz kwotę...\"\r\n                                className=\"form__input \"\r\n                                value={amount}\r\n                                onChange={({ target }) => setAmount(target.value)}\r\n                            />\r\n                        </label>\r\n                    </p>\r\n                    <label className=\"form__item\">\r\n                        <span className=\"form__ItemDescription\">Wybierz walutę</span>\r\n                        <select\r\n                            value={currency}\r\n                            onChange={({ target }) => setCurrency(target.value)}\r\n                            className=\"form__input\"\r\n                        >\r\n                            {currencies.map((currency => (\r\n                                <option\r\n                                    key={currency.name}\r\n                                    value={currency.name}\r\n                                >\r\n                                    {currency.name}\r\n                                </option>\r\n                            )))};\r\n                        </select>\r\n                    </label>\r\n                </fieldset>\r\n                <button className=\"form__button\" onClick={onFormSubmit}>Przelicz</button>\r\n                <button type=\"reset\" className=\"form__button\" onClick={onClickClear} >Wyczyść formularz</button>\r\n                <Section result={result} />\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledContainer = styled.main`\r\n    margin: 0px auto;\r\n    background-image: url(\"https://cdn.wallpapersafari.com/14/53/1xAB3U.jpg\");\r\n    background-size: cover;\r\n    height: 100vh;\r\n    overflow-y: hidden;\r\n`;","import { StyledContainer } from \"./styled\";\r\n\r\nexport const Container = (props) => (\r\n    <StyledContainer>\r\n        {props.children}\r\n    </StyledContainer>\r\n);\r\n\r\n","import { Form } from './Form';\r\nimport { Container } from \"./Container\";\r\n\r\nfunction App(result, getResult) {\r\n\r\n  return (\r\n    <Container >\r\n      <Form\r\n        result={result}\r\n        getResult={getResult} />\r\n    </ Container>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}